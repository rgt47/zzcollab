# ZZCOLLAB Team Configuration
# This file defines Docker variants and team settings for your zzcollab project.
# Edit this file to customize your team's development environment.
#
# VARIANT SYSTEM (NEW - Single Source of Truth):
# - All variant definitions are stored in variant_examples.yaml
# - This config file only specifies which variants to enable
# - Use ./add_variant.sh to browse and add variants interactively
#
# USAGE:
# 1. Set `enabled: true` for variants you want to build
# 2. Variant definitions are automatically pulled from variant_examples.yaml
# 3. Choose your approach:
#    a) Set `use_config_variants: true` below - uses this file automatically
#    b) Use flag: zzcollab -i -t myteam -p myproject --variants-config config.yaml
#    c) Legacy: zzcollab -i -t myteam -p myproject -B r-ver,rstudio

#=============================================================================
# TEAM METADATA
#=============================================================================

team:
  name: "${TEAM_NAME}"
  project: "${PROJECT_NAME}"
  description: "Research collaboration environment for ${PROJECT_NAME}"
  maintainer: "${AUTHOR_NAME} <${AUTHOR_EMAIL}>"
  created: "${CREATION_DATE}"

#=============================================================================
# DOCKER VARIANTS CONFIGURATION
#=============================================================================
# Define which variants your team needs from the variant library.
# Full definitions are automatically pulled from variant_examples.yaml

variants:
  
  #---------------------------------------------------------------------------
  # DEFAULT VARIANTS (Enabled by default for new teams)
  #---------------------------------------------------------------------------
  
  minimal:
    enabled: true    # Essential development environment (~800MB)
    # Full definition in variant_examples.yaml
  
  analysis:
    enabled: true    # Tidyverse analysis environment (~1.2GB)
    # Full definition in variant_examples.yaml
    
  #---------------------------------------------------------------------------
  # ADDITIONAL VARIANTS (Set enabled: true to activate)
  #---------------------------------------------------------------------------
  # Use ./add_variant.sh to browse all available options interactively
  
  # Standard research environments
  modeling:
    enabled: false   # Machine learning with tidymodels (~1.5GB)
  
  publishing:
    enabled: false   # LaTeX, Quarto, bookdown publishing (~3GB)
  
  # Specialized domains  
  bioinformatics:
    enabled: false   # Bioconductor genomics packages (~2GB)
    
  geospatial:
    enabled: false   # sf, terra, leaflet mapping (~2.5GB)
  
  # Lightweight Alpine variants
  alpine_minimal:
    enabled: false   # Ultra-lightweight CI/CD (~200MB)
    
  alpine_analysis:
    enabled: false   # Essential analysis in tiny container (~400MB)
    
  # R-hub testing environments
  rhub_ubuntu:
    enabled: false   # CRAN-compatible testing (~1GB)
    
  rhub_fedora:
    enabled: false   # R-devel testing (~1.2GB)
    
  rhub_windows:
    enabled: false   # Windows compatibility testing (~1.5GB)
    
  # High-performance computing
  hpc_alpine:
    enabled: false   # Parallel processing optimized (~600MB)
  
  #---------------------------------------------------------------------------
  # CUSTOM VARIANTS (Add your own)
  #---------------------------------------------------------------------------
  # Copy variants from ./add_variant.sh or define manually
  # Format: variant_name: { enabled: true/false }
  # Full definitions pulled from variant_examples.yaml

#=============================================================================
# BUILD CONFIGURATION
#=============================================================================

build:
  # Use variants defined in this config file by default
  use_config_variants: true   # If true, uses variants from this file instead of -B flag
  
  # Variant source file (single source of truth)
  variant_library: "variant_examples.yaml"
  
  # Docker build options
  docker:
    platform: "auto"  # auto, linux/amd64, linux/arm64
    no_cache: false
    parallel_builds: true
    
  # Package installation options  
  packages:
    repos: "https://cran.rstudio.com/"
    install_suggests: false
    dependencies: ["Depends", "Imports", "LinkingTo"]
    
#=============================================================================
# DEVELOPMENT SETTINGS  
#=============================================================================

development:
  # Default interface for team members
  default_interface: "minimal"  # Which variant to use by default
  
  # Shared development settings
  dotfiles:
    auto_filter_macos: true    # Filter macOS commands for Docker
    preserve_permissions: true
    
  # Container settings
  container:
    default_user: "analyst"
    working_dir: "/home/analyst/project"
    shared_volumes:
      - "${PWD}:/home/analyst/project"
      
#=============================================================================
# TEAM COLLABORATION
#=============================================================================

collaboration:
  # GitHub integration
  github:
    auto_create_repo: false
    default_visibility: "private"
    enable_actions: true
    
  # Documentation
  documentation:
    auto_generate_readme: true
    include_variant_docs: true
    update_user_guide: true