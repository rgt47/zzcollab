name: ShellCheck

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  shellcheck:
    name: ShellCheck Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
    - name: Verify ShellCheck installation
      run: shellcheck --version
      
    - name: Run ShellCheck on main script
      run: |
        echo "Checking main zzcollab.sh script..."
        shellcheck --severity=warning zzcollab.sh
        
    - name: Run ShellCheck on modules
      run: |
        echo "Checking all modules..."
        find modules -name "*.sh" -type f | while read -r file; do
          echo "Checking $file..."
          shellcheck --severity=warning "$file"
        done
        
    - name: Run ShellCheck on utility scripts
      run: |
        echo "Checking utility scripts..."
        for script in install.sh navigation_scripts.sh; do
          if [ -f "$script" ]; then
            echo "Checking $script..."
            shellcheck --severity=warning "$script"
          fi
        done
        
    - name: Run ShellCheck on template scripts
      run: |
        echo "Checking template scripts..."
        find templates -name "*.sh" -type f | while read -r file; do
          echo "Checking $file..."
          shellcheck --severity=warning "$file"
        done
        
    - name: Generate ShellCheck report
      run: |
        echo "Generating comprehensive ShellCheck report..."
        {
          echo "# ShellCheck Analysis Report"
          echo "Generated on: $(date)"
          echo ""
          echo "## Summary"
          echo "- Main script: zzcollab.sh"
          echo "- Modules: $(find modules -name "*.sh" -type f | wc -l) files"
          echo "- Utility scripts: $(find . -maxdepth 1 -name "*.sh" -type f | wc -l) files"
          echo "- Template scripts: $(find templates -name "*.sh" -type f | wc -l) files"
          echo ""
          echo "## Analysis Results"
          echo "All scripts passed ShellCheck analysis with no issues."
        } > shellcheck-report.md
        
    - name: Upload ShellCheck report
      uses: actions/upload-artifact@v4
      with:
        name: shellcheck-report
        path: shellcheck-report.md
        retention-days: 30
        
    - name: Comment on PR (if pull request)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('shellcheck-report.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '## ShellCheck Analysis Results\n\n' + report
          });
          
  shellcheck-diff:
    name: ShellCheck Diff Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
    - name: Get changed shell files
      id: changed-files
      run: |
        git diff --name-only origin/main...HEAD | grep -E '\.(sh|bash)$' | tee changed-files.txt || true
        echo "changed_files=$(cat changed-files.txt | tr '\n' ' ')" >> "$GITHUB_OUTPUT"
        
    - name: Run ShellCheck on changed files
      if: steps.changed-files.outputs.changed_files != ''
      run: |
        echo "Running ShellCheck on changed files..."
        while read -r file; do
          if [ -f "$file" ]; then
            echo "Checking $file..."
            shellcheck --severity=warning "$file"
          fi
        done < changed-files.txt
        
    - name: No shell files changed
      if: steps.changed-files.outputs.changed_files == ''
      run: |
        echo "No shell files were changed in this PR."