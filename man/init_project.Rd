% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{init_project}
\alias{init_project}
\title{Initialize a new zzcollab team project}
\usage{
init_project(
  team_name = NULL,
  project_name = NULL,
  github_account = NULL,
  dotfiles_path = NULL,
  dotfiles_nodots = NULL
)
}
\arguments{
\item{team_name}{Character string specifying the Docker Hub team/organization name.
This becomes part of the Docker image names (e.g., "myteam/projectcore").
If NULL, uses value from configuration file via \code{get_config("team_name")}.}

\item{project_name}{Character string specifying the project name.
Used for Docker image names, GitHub repository, and directory names.
Must be a valid Docker repository name (lowercase, no spaces).}

\item{github_account}{Character string specifying GitHub account for repository creation.
If NULL, uses config default or falls back to \code{team_name}.
Used with GitHub CLI to create private repositories.}

\item{dotfiles_path}{Character string specifying path to dotfiles directory.
These files (.vimrc, .zshrc, etc.) are copied into Docker images for
personalized development environments. If NULL, uses config default.}

\item{dotfiles_nodots}{Logical indicating whether dotfiles need leading dots added.
Set to TRUE if your dotfiles are named without leading dots (e.g., "vimrc"
instead of ".vimrc"). If NULL, uses config default.}
}
\value{
Logical value indicating success (TRUE) or failure (FALSE) of the
initialization process. The function creates multiple components, so
partial failures may occur.
}
\description{
Creates a complete team research collaboration infrastructure including Docker
base images, GitHub repository, and project structure. This function is the
R interface to the \code{zzcollab --init} command and should be used by
team leads to set up new collaborative research projects.
}
\details{
This function orchestrates the complete team project setup process:
\enumerate{
\item \strong{Team Docker Images}: Creates and pushes base images to Docker Hub
\item \strong{Project Structure}: Generates R package structure with analysis templates
\item \strong{GitHub Repository}: Creates private repository with CI/CD workflows
\item \strong{Configuration Files}: Sets up Dockerfile, Makefile, and config files
\item \strong{Documentation}: Generates user guides and README files
}

The function integrates with the zzcollab configuration system, allowing
team leads to set default values once and reuse them across projects.

\strong{Prerequisites:}
\itemize{
\item Docker installed and running
\item Docker Hub account for image hosting
\item GitHub CLI authenticated (for repository creation)
\item zzcollab installed in PATH or source directory
}

\strong{Team Workflow:}
\itemize{
\item Team Lead: Runs \code{init_project()} once per project
\item Team Members: Use \code{join_project()} to join existing projects
}
}
\examples{
\dontrun{
# Basic team project initialization
success <- init_project(
  team_name = "mylab",
  project_name = "covid-study"
)

# Full specification with all parameters
success <- init_project(
  team_name = "datascience",
  project_name = "market-analysis",
  github_account = "myuniversity",
  dotfiles_path = "~/dotfiles",
  dotfiles_nodots = FALSE
)

# Using configuration defaults (recommended workflow)
# First, set up your defaults
set_config("team_name", "mylab")
set_config("dotfiles_dir", "~/dotfiles")

# Then initialize projects easily
init_project(project_name = "new-study")
}

}
\seealso{
\code{\link{join_project}} for team members joining existing projects
\code{\link{set_config}} for setting up configuration defaults
\code{\link{team_images}} for listing created team images
}
