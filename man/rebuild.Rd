% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{rebuild}
\alias{rebuild}
\title{Trigger Docker image rebuild for zzcollab projects}
\usage{
rebuild(target = "docker-build")
}
\arguments{
\item{target}{Character string specifying the Make target to run.
Default is "docker-build" which rebuilds the main project image.
Other useful targets include:
\itemize{
\item "docker-build": Rebuild main Docker image
\item "docker-test": Rebuild and run tests
\item "docker-check": Rebuild and run package checks
\item "docker-clean": Clean up Docker images and containers
}}
}
\value{
Logical value indicating success (TRUE) or failure (FALSE) of the build.
The function returns TRUE if the make command exits with status 0,
FALSE otherwise.
}
\description{
Rebuilds Docker images for your zzcollab project using the project's Makefile.
This is useful when you've made changes to dependencies, Dockerfile, or need
to incorporate updates from team base images.
}
\details{
This function requires a Makefile to be present in the current working directory,
which is automatically created by zzcollab project initialization. The function
uses the system's make command to execute the specified target.

Common use cases:
\itemize{
\item After adding new R packages to your project
\item When team base images have been updated
\item After modifying Dockerfile or dependency files
\item When containers are behaving unexpectedly
}
}
\examples{
\dontrun{
# Rebuild the main Docker image
if (rebuild()) {
  message("Docker image rebuilt successfully")
} else {
  message("Docker build failed - check console output")
}

# Rebuild and run tests
rebuild("docker-test")

# Clean up and rebuild
rebuild("docker-clean")
rebuild("docker-build")
}

}
\seealso{
\code{\link{status}} for checking container status
\code{\link{sync_env}} for syncing R package environment
}
