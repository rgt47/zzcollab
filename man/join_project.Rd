% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{join_project}
\alias{join_project}
\title{Join an existing zzcollab team project}
\usage{
join_project(
  team_name = NULL,
  project_name = NULL,
  dotfiles_path = NULL,
  dotfiles_nodots = NULL
)
}
\arguments{
\item{team_name}{Character string specifying the Docker Hub team/organization name.
This should match the team name used when the project was initialized.
If NULL, uses value from configuration file via \code{get_config("team_name")}.}

\item{project_name}{Character string specifying the project name.
Must match the project name used during initialization.
Used to identify the correct team Docker images and repository.}

\item{dotfiles_path}{Character string specifying path to personal dotfiles.
These configuration files (.vimrc, .zshrc, etc.) personalize your
development environment within the team's standardized setup.
If NULL, uses config default.}

\item{dotfiles_nodots}{Logical indicating whether dotfiles need leading dots added.
Set to TRUE if your dotfiles are stored without leading dots.
If NULL, uses config default.}
}
\value{
Logical value indicating success (TRUE) or failure (FALSE).
The function validates team images exist before proceeding with setup.
}
\description{
Allows team members (Developers 2+) to join an existing zzcollab project by
setting up their local development environment using the team's shared Docker
images and project structure. This function is the R interface to team
collaboration workflows.
}
\details{
This function is designed for team members joining existing projects.
The team lead should have already run \code{init_project()} to create
the necessary team infrastructure.

\strong{Setup Process:}
\enumerate{
\item \strong{Validation}: Checks that team Docker images exist and are accessible
\item \strong{Project Setup}: Creates local project structure and configuration
\item \strong{Environment}: Configures to use team's Docker image via --use-team-image
\item \strong{Integration}: Configures local tools and personal dotfiles
}

\strong{Prerequisites:}
\itemize{
\item Team lead has run \code{init_project()} and shared repository access
\item Docker installed and running locally
\item Access to team's Docker images (usually public on Docker Hub)
\item Git repository cloned locally (typically done before calling this function)
}

\strong{Development Workflow:}
After joining, start development with \code{make docker-zsh} (shell) or
\code{make docker-rstudio} (RStudio Server at http://localhost:8787).
}
\examples{
\dontrun{
# Basic team project joining
success <- join_project(
  team_name = "mylab",
  project_name = "covid-study"
)

# Join with personal dotfiles
join_project(
  team_name = "datascience",
  project_name = "market-analysis",
  dotfiles_path = "~/dotfiles"
)

# Using configuration defaults (recommended)
set_config("team_name", "mylab")
set_config("dotfiles_dir", "~/dotfiles")

# Then join projects easily
join_project(project_name = "new-study")

# Complete workflow for team member
# 1. Clone repository (outside R)
# system("git clone https://github.com/mylab/study.git")
# setwd("study")

# 2. Join project
join_project(team_name = "mylab", project_name = "study")

# 3. Start development (outside R)
# system("make docker-zsh")  # or make docker-rstudio
}

}
\seealso{
\code{\link{init_project}} for team leads initializing projects
\code{\link{set_config}} for setting up configuration defaults
\code{\link{team_images}} for checking available team images
}
