# Container-specific .zshrc - removes macOS dependencies
# Based on zenn's .zshrc but adapted for Linux containers

# Version control setup
autoload -Uz vcs_info
precmd() { vcs_info }
zstyle ':vcs_info:git:*' formats '%b '
setopt PROMPT_SUBST

# Prompt (adapted for container)
PROMPT='🐳[${CONTAINER_NAME:-${PKG_NAME}}] %F{cyan}%*%f %F{magenta}${${PWD:A}/$HOME/~}%f %F{red}${vcs_info_msg_0_}%f$ %(?:☕  :☔  )'

# Vi mode
bindkey -v

# Completion system
autoload -U compinit && compinit -u && compinit && compdef _dirs d
setopt auto_cd auto_pushd pushd_ignore_dups pushdminus

# Container-appropriate PATH
export PATH=".:$HOME/bin:/usr/local/bin:$HOME/.local/bin:/usr/bin:/bin:$PATH"

# Container-appropriate cdpath
cdpath=($HOME $HOME/project $HOME/workspace)

# Load zsh plugins if available (installed by Dockerfile)
[[ -s ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# History configuration
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000

# Ensure history file exists to prevent locking errors
[[ ! -f "$HISTFILE" ]] && touch "$HISTFILE"

setopt EXTENDED_HISTORY      # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY    # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY         # Share history between all sessions.
setopt HIST_IGNORE_DUPS      # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS  # Delete an old recorded event if a new event is a duplicate.
setopt HIST_IGNORE_SPACE     # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS     # Do not write a duplicate event to the history file.
setopt HIST_VERIFY           # Do not execute immediately upon history expansion.
setopt APPEND_HISTORY        # append to history file (Default)
setopt HIST_NO_STORE         # Don't store history commands
setopt HIST_REDUCE_BLANKS    # Remove superfluous blanks from each command line being added to the history.

# Aliases (keeping container-appropriate ones)
alias hh=history
alias R='R --quiet --no-save'
alias v='vim'
alias vc='vim ~/.vimrc'
alias vz='vim ~/.zshrc'
alias sz='source ~/.zshrc'
alias ZZ='exit'
alias rn="radian"
alias nt="nvim"

# Global aliases for directory navigation
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
alias -g ......='../../../../..'

# Directory navigation
alias -- -='cd -'
alias 1='cd -1'
alias 2='cd -2'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'

alias md='mkdir -p'
alias rd=rmdir

# List directory contents (use standard ls in container)
alias lsa='ls -lah'
alias l='ls -lah'
alias ll='ls -lh'
alias la='ls -lAh'

# If eza is available, use it instead
command -v eza >/dev/null 2>&1 && alias lt='eza -lrha -sold'

# Git aliases
alias g='git'
compdef g=git
alias gst='git status'
compdef _git gst=git-status
alias gl='git pull'
compdef _git gl=git-pull
alias gup='git fetch && git rebase'
compdef _git gup=git-fetch
alias gp='git push'
compdef _git gp=git-push
gdv() { git diff -w "$@" | view - }
compdef _git gdv=git-diff
alias gc='git commit -v'
compdef _git gc=git-commit
alias gca='git commit -v -a'
compdef _git gca=git-commit
alias gco='git checkout'
compdef _git gco=git-checkout
alias gcm='git checkout master'
alias gb='git branch'
compdef _git gb=git-branch
alias gba='git branch -a'
compdef _git gba=git-branch
alias gcount='git shortlog -sn'
compdef gcount=git
alias gcp='git cherry-pick'
compdef _git gcp=git-cherry-pick
alias glg='git log --stat --max-count=5'
compdef _git glg=git-log
alias glgg='git log --graph --max-count=5'
compdef _git glgg=git-log
alias gss='git status -s'
compdef _git gss=git-status
alias ga='git add'
compdef _git ga=git-add
alias gm='git merge'
compdef _git gm=git-merge
alias grh='git reset HEAD'
alias grhh='git reset HEAD --hard'

# Container-friendly file finding (if fzf is available)
if command -v fzf >/dev/null 2>&1; then
    alias pp='find . -name "*.pdf" | fzf | xargs -r xdg-open'
    alias rr='vim $(find . -type f | grep -E "\.(R|Rmd)$" | fzf)'
fi

# Directory listing function
function d () {
  if [[ -n $1 ]]; then
    dirs "$@"
  else
    dirs -v | head -n 10
  fi
}

# Git function for quick commits
function gz() {
    git add .
    git commit -a -m "$1"
    git push
}

# Editor configuration
export EDITOR="vim"

# File finding function (container-friendly)
if command -v fzf >/dev/null 2>&1; then
    ff() {
      local file
      file=$(find "${1:-.}" -type f -not -path '*/\.*' 2>/dev/null | fzf +m) &&
      cd "$(dirname "$file")"
    }
    
    # FZF configuration
    export FZF_DEFAULT_OPTS='-m --height 50% --border --reverse --preview "cat {}"'
    export FZF_CTRL_R_OPTS="
      --bind 'ctrl-r:up'
      --bind 'ctrl-s:down'"
fi

# ZSH autosuggestions configuration (if plugin is available)
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=red,bold,underline'

# Container-specific environment variables
export CONTAINER_ENV=1
export DEBIAN_FRONTEND=noninteractive

# R configuration for containers
alias r="R"
if command -v radian >/dev/null 2>&1; then
    alias r="radian"
fi