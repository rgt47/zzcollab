ARG BASE_IMAGE=rocker/r-ver
ARG R_VERSION=latest
FROM ${BASE_IMAGE}:${R_VERSION}

# Install system dependencies
RUN apt-get update --allow-insecure-repositories && \
    apt-get install -y --allow-unauthenticated \
    git \
    ssh \
    curl \
    wget \
    vim \
    tmux \
    zsh \
    build-essential \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    libfontconfig1-dev \
    libharfbuzz-dev \
    libfribidi-dev \
    libfreetype6-dev \
    libpng-dev \
    libtiff5-dev \
    libjpeg-dev \
    libgit2-dev \
    man-db \
    pandoc \
    tree \
    ripgrep \
    eza \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js (required for coc.nvim and other vim plugins)
RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - && \
    apt-get install -y nodejs

# SKIP TinyTeX installation for fastest possible build
# TinyTeX can be installed during development if needed:
# R -e "install.packages('tinytex'); tinytex::install_tinytex()"

# Build arguments for team customization
ARG TEAM_NAME=rgt47
ARG PROJECT_NAME=r-bare-minimum
ARG ADDITIONAL_PACKAGES=""

# Add metadata labels
LABEL maintainer="${TEAM_NAME}"
LABEL project="${PROJECT_NAME}"
LABEL org.opencontainers.image.title="ZZCOLLAB Team Core Image (Bare Minimum)"
LABEL org.opencontainers.image.description="Team-specific R environment with no pre-installed packages"
LABEL org.opencontainers.image.vendor="ZZCOLLAB"

# Create non-root user with zsh as default shell
ARG USERNAME=analyst
RUN useradd --create-home --shell /bin/zsh ${USERNAME}

# NO R PACKAGES INSTALLED AT BUILD TIME
# All packages (including renv) installed during runtime in project setup
# This eliminates all compilation time from Docker build

# Give analyst user write permission to R library directory
RUN chown -R ${USERNAME}:${USERNAME} /usr/local/lib/R/site-library

# Set working directory and ensure user owns it
WORKDIR /home/${USERNAME}/project
RUN chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}/project