# ZZCOLLAB Team Configuration
# This file defines Docker environments and team settings for your zzcollab project.
# Edit this file to customize your team's development environment.
#
# PROFILE SYSTEM (Single Source of Truth):
# - All profile definitions are stored in profiles.yaml
# - This config file only specifies which profiles to enable
# - Use ./add_profile.sh to browse and add environments interactively
#
# USAGE:
# 1. Set `enabled: true` for profiles you want to build
# 2. Environment definitions are automatically pulled from profiles.yaml
# 3. Run: zzcollab -i -p myproject (builds enabled profiles automatically)

#=============================================================================
# TEAM METADATA
#=============================================================================

team:
  name: "${TEAM_NAME}"
  project: "${PROJECT_NAME}"
  description: "Research collaboration environment for ${PROJECT_NAME}"
  maintainer: "${AUTHOR_NAME} <${AUTHOR_EMAIL}>"
  created: "${CREATION_DATE}"

#=============================================================================
# DOCKER PROFILES CONFIGURATION
#=============================================================================
# Define which profiles your team needs from the profile library.
# Full definitions are automatically pulled from profiles.yaml

profiles:

  #---------------------------------------------------------------------------
  # DEFAULT PROFILE (Enabled by default for new teams)
  #---------------------------------------------------------------------------

  minimal:
    enabled: true    # Essential development environment (~800MB)
    # Full definition in profiles.yaml

  #---------------------------------------------------------------------------
  # ADDITIONAL PROFILES (Set enabled: true to activate)
  #---------------------------------------------------------------------------
  # Use ./add_profile.sh to browse all available options interactively
  
  # Standard research profiles
  modeling:
    enabled: false   # Machine learning with tidymodels (~1.5GB)
  
  publishing:
    enabled: false   # LaTeX, Quarto, bookdown publishing (~3GB)
  
  # Specialized domain profiles  
  bioinformatics:
    enabled: false   # Bioconductor genomics packages (~2GB)
    
  geospatial:
    enabled: false   # sf, terra, leaflet mapping (~2.5GB)
  
  # Lightweight Alpine profiles
  alpine_minimal:
    enabled: false   # Ultra-lightweight CI/CD (~200MB)
    
  alpine_analysis:
    enabled: false   # Essential analysis in tiny container (~400MB)
    
  # R-hub testing profiles
  rhub_ubuntu:
    enabled: false   # CRAN-compatible testing (~1GB)
    
  rhub_fedora:
    enabled: false   # R-devel testing (~1.2GB)
    
  rhub_windows:
    enabled: false   # Windows compatibility testing (~1.5GB)
    
  # High-performance computing
  hpc_alpine:
    enabled: false   # Parallel processing optimized (~600MB)
  
  #---------------------------------------------------------------------------
  # CUSTOM PROFILES (Add your own)
  #---------------------------------------------------------------------------
  # Copy profiles from ./add_profile.sh or define manually
  # Format: profile_name: { enabled: true/false }
  # Full definitions pulled from profiles.yaml

#=============================================================================
# BUILD CONFIGURATION
#=============================================================================

build:
  # Use profiles defined in this config file by default
  use_config_profiles: true   # If true, uses profiles from this file instead of -B flag

  # Profile source file (single source of truth)
  profile_library: "profiles.yaml"
  
  # Docker build options
  docker:
    platform: "auto"  # auto, linux/amd64, linux/arm64
    no_cache: false
    parallel_builds: true
    
  # Package installation options  
  packages:
    repos: "https://cran.rstudio.com/"
    install_suggests: false
    dependencies: ["Depends", "Imports", "LinkingTo"]
    
#=============================================================================
# DEVELOPMENT SETTINGS  
#=============================================================================

development:
  # Default interface for team members
  default_interface: "minimal"  # Which profile to use by default
  
  # Shared development settings
  dotfiles:
    auto_filter_macos: true    # Filter macOS commands for Docker
    preserve_permissions: true
    
  # Container settings
  container:
    default_user: "analyst"
    working_dir: "/home/analyst/project"
    shared_volumes:
      - "${PWD}:/home/analyst/project"
      
#=============================================================================
# TEAM COLLABORATION
#=============================================================================

collaboration:
  # GitHub integration
  github:
    auto_create_repo: false
    default_visibility: "private"
    enable_actions: true
    
  # Documentation
  documentation:
    auto_generate_readme: true
    include_profile_docs: true
    update_user_guide: true