# =============================================================================
# TMUX CONFIGURATION - Mirroring Kitty Setup
# =============================================================================
# This configuration replicates your Kitty terminal settings in tmux
# for use in Docker containers and remote environments
# Based on: ~/.config/kitty/kitty.conf

# =============================================================================
# GENERAL SETTINGS
# =============================================================================

# Enable mouse support (click to select panes, resize, scroll)
set -g mouse on

# Increase scrollback buffer (Kitty: 50000 lines)
set -g history-limit 50000

# Enable 256 color support
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Start window and pane numbering at 1 (like Kitty tabs: cmd+1, cmd+2, etc)
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Set default shell to zsh (matching your setup)
set -g default-shell /bin/zsh

# Reduce escape time for better vim responsiveness
set -sg escape-time 0

# Increase display time for status messages
set -g display-time 2000

# Enable focus events for better vim integration
set -g focus-events on

# =============================================================================
# KEY BINDINGS - Kitty-inspired
# =============================================================================

# Change prefix from Ctrl+b to Ctrl+a (easier to reach)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Split windows (Kitty: cmd+d for vsplit, cmd+shift+d for hsplit)
# Use | for vertical split, - for horizontal split
unbind '"'
unbind %
bind | split-window -h -c "#{pane_current_path}"  # Vertical split (like Kitty cmd+d)
bind - split-window -v -c "#{pane_current_path}"  # Horizontal split (like Kitty cmd+shift+d)

# Alternative bindings closer to Kitty
bind d split-window -h -c "#{pane_current_path}"  # Vertical split
bind D split-window -v -c "#{pane_current_path}"  # Horizontal split
bind -n F6 split-window -h -c "#{pane_current_path}"   # F6 for vertical split
bind -n F7 split-window -v -c "#{pane_current_path}"   # F7 for horizontal split

# Window management (Kitty: cmd+t for new tab, cmd+w to close)
bind t new-window -c "#{pane_current_path}"       # New window (like cmd+t)
bind w kill-pane                                   # Close pane (like cmd+w)
bind W kill-window                                 # Close window (like cmd+shift+w)

# Navigate between windows (Kitty: cmd+shift+[ and cmd+shift+])
bind -n C-S-Left previous-window                   # Previous window
bind -n C-S-Right next-window                      # Next window
bind [ previous-window                             # Alternative
bind ] next-window                                 # Alternative
bind n next-window                                 # Prefix+n for next window (default)

# Navigate directly to windows 1-9 (Kitty: cmd+1 through cmd+9)
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 9

# Navigate between panes (vim-style)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes (vim-style with capital letters)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Toggle pane zoom (Kitty: ctrl+shift+z toggle_layout stack)
bind z resize-pane -Z
bind -n F8 resize-pane -Z                          # F8 for fullscreen toggle

# Reload config file
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Enter copy mode (for scrollback like Kitty ctrl+shift+h)
bind h copy-mode
bind Escape copy-mode

# =============================================================================
# COPY MODE - VI STYLE (matching vim/kitty workflow)
# =============================================================================

# Use vi key bindings in copy mode
setw -g mode-keys vi

# Copy mode bindings (similar to vim)
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Copy to system clipboard (requires xclip or pbcopy)
# On macOS: uses pbcopy
# On Linux: uses xclip (install in container: apt-get install xclip)
if-shell "uname | grep -q Darwin" \
  "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'" \
  "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# Mouse selection automatically copies to clipboard
if-shell "uname | grep -q Darwin" \
  "bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'" \
  "bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# =============================================================================
# STATUS BAR - Kitty-inspired (tab bar: bottom, powerline style)
# =============================================================================

# Position status bar at bottom (Kitty: tab_bar_edge bottom)
set -g status-position bottom

# Update status bar frequently
set -g status-interval 1

# Status bar styling (mimicking Kitty powerline style)
set -g status-style bg=colour234,fg=colour137

# Left side: session name
set -g status-left-length 50
set -g status-left '#[fg=colour232,bg=colour154,bold] #S #[fg=colour154,bg=colour234]'

# Right side: date/time
set -g status-right-length 100
set -g status-right '#[fg=colour239]#[fg=colour246,bg=colour239] %Y-%m-%d #[fg=colour249]#[fg=colour232,bg=colour249,bold] %H:%M:%S '

# Window status format (inactive)
setw -g window-status-format '#[fg=colour245,bg=colour236] #I:#W '

# Window status format (active) - highlighted like Kitty active tab
setw -g window-status-current-format '#[fg=colour234,bg=colour39]#[fg=colour232,bg=colour39,bold] #I:#W #[fg=colour39,bg=colour234]'

# Window separator
setw -g window-status-separator ''

# Pane border colors (Kitty: window_border_width, active/inactive colors)
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour154

# Message styling
set -g message-style bg=colour239,fg=colour223,bold

# =============================================================================
# APPEARANCE SETTINGS - Kitty-inspired
# =============================================================================

# Window padding equivalent (Kitty: window_padding_width 4)
# Note: tmux doesn't have exact padding, but we can adjust borders
# Border styles: single, double, heavy, simple, number (try each if one doesn't work)
# 'single' uses: ─ │ ┌ ┐ └ ┘
# 'double' uses: ═ ║ ╔ ╗ ╚ ╝
# 'heavy' uses: ━ ┃ ┏ ┓ ┗ ┛
set -g pane-border-lines single

# Display pane indicators briefly
set -g display-panes-time 2000

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# Window titles
set -g set-titles on
set -g set-titles-string '#T - tmux'

# =============================================================================
# DATA SCIENCE OPTIMIZATIONS (from Kitty config)
# =============================================================================

# Large scrollback for reviewing:
# - Training logs from ML models
# - Database query results
# - Error traces from data processing
# Already set above: history-limit 50000

# Enable automatic window renaming based on current program
setw -g automatic-rename on

# Aggressive resize - resize window to smallest client viewing it
setw -g aggressive-resize on

# =============================================================================
# PLUGINS (Optional - for enhanced features)
# =============================================================================
# To use plugins, install TPM (Tmux Plugin Manager):
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#
# Recommended plugins for data science workflows:
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'      # Basic tmux settings
# set -g @plugin 'tmux-plugins/tmux-resurrect'     # Save/restore sessions
# set -g @plugin 'tmux-plugins/tmux-continuum'     # Automatic session save
# set -g @plugin 'tmux-plugins/tmux-yank'          # Better copy/paste
# set -g @plugin 'christoomey/vim-tmux-navigator'  # Seamless vim/tmux navigation
#
# Initialize TPM (keep at bottom of config)
# run '~/.tmux/plugins/tpm/tpm'

# =============================================================================
# QUICK REFERENCE
# =============================================================================
# Prefix: Ctrl+a
#
# Window Management (like Kitty tabs):
#   Prefix + t          - New window (cmd+t)
#   Prefix + w          - Close pane (cmd+w)
#   Prefix + W          - Close window (cmd+shift+w)
#   Prefix + 1-9        - Switch to window 1-9 (cmd+1-9)
#   Prefix + [          - Previous window (cmd+shift+[)
#   Prefix + ]          - Next window (cmd+shift+])
#   Prefix + n          - Next window
#   Ctrl+Shift+Left     - Previous window
#   Ctrl+Shift+Right    - Next window
#
# Pane Management (like Kitty splits):
#   Prefix + d or |     - Vertical split (cmd+d)
#   Prefix + D or -     - Horizontal split (cmd+shift+d)
#   F6                  - New vertical split window
#   F7                  - New horizontal split window
#   F8                  - Toggle pane zoom/fullscreen
#   Prefix + h/j/k/l    - Navigate panes (vim-style)
#   Prefix + H/J/K/L    - Resize panes (vim-style)
#   Prefix + z          - Toggle pane zoom (ctrl+shift+z)
#
# Copy Mode (like Kitty scrollback):
#   Prefix + h          - Enter copy mode / scrollback (ctrl+shift+h)
#   Prefix + Escape     - Enter copy mode
#   In copy mode:
#     v                 - Begin selection
#     y                 - Copy selection
#     q                 - Quit copy mode
#
# Other:
#   Prefix + r          - Reload config
#   Prefix + ?          - Show all keybindings
